{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page/add-project/add-project.component.css","webpack:///./src/app/page/add-project/add-project.component.html","webpack:///./src/app/page/add-project/add-project.component.ts","webpack:///./src/app/page/contact/contact.component.css","webpack:///./src/app/page/contact/contact.component.html","webpack:///./src/app/page/contact/contact.component.ts","webpack:///./src/app/page/details/details.component.css","webpack:///./src/app/page/details/details.component.html","webpack:///./src/app/page/details/details.component.ts","webpack:///./src/app/page/main/main.component.css","webpack:///./src/app/page/main/main.component.html","webpack:///./src/app/page/main/main.component.ts","webpack:///./src/app/security/authentication-service.service.ts","webpack:///./src/app/security/can-activate-auth.guard.service.ts","webpack:///./src/app/security/jwt-utils.service.ts","webpack:///./src/app/security/token-interceptor.service.ts","webpack:///./src/app/service/category.service.ts","webpack:///./src/app/service/donation.service.ts","webpack:///./src/app/service/project.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".img-fluid {\\r\\n    height: 250px;\\r\\n    width: 100%;\\r\\n}\\r\\n.navbar-inverse {\\r\\n    z-index: 1000;\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n\\r\\n}\"","module.exports = \"\\r\\n<nav  class=\\\"navbar navbar-inverse\\\">\\r\\n  <div class=\\\"container\\\"> \\r\\n  <div class=\\\"navbar-header\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"main\\\">Refresh Novi Sad</a>\\r\\n  </div>\\r\\n  <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n    <ul class=\\\"nav navbar-nav\\\">\\r\\n      <li class=\\\"active\\\"><a href=\\\"main\\\">Početna</a></li> \\r\\n      <li><a>O nama</a></li>\\r\\n      <li><a href=\\\"contact\\\">Kontakt</a></li>\\r\\n    </ul>\\r\\n    <ul class=\\\"nav navbar-nav pull-right\\\">\\r\\n      <li *ngIf=\\\"!isLoggedIn()\\\"><a href=\\\"login\\\">Login</a></li>\\r\\n\\t\\t\\t<li *ngIf=\\\"isLoggedIn()\\\"><a (click)=\\\"logout()\\\">Logout</a></li>\\r\\n\\t  </ul>\\r\\n  </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n \\r\\n      \\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Donation } from './model/donation.model';\r\nimport { Category } from './model/category.model';\r\nimport { Project } from './model/project.model';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './security/authentication-service.service';\r\nimport _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  public projects: Project[];\r\n  public projectsClone: Project[];\r\n\r\n  public categories: Category[];\r\n  public categoriesClone: Category[];\r\n\r\n  public newProject: Project;\r\n  //public newCategory: Category;\r\n  public newDonation: Donation;\r\n  constructor (private authenticationService: AuthenticationService,\r\n              private router: Router) { }\r\n   logout(): void {\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n}\r\n\r\n\r\n\r\n  ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './page/main/main.component';\r\n\r\n\r\nimport { JwtUtilsService } from './security/jwt-utils.service';\r\nimport { TokenInterceptorService } from './security/token-interceptor.service';\r\nimport { CanActivateAuthGuard } from './security/can-activate-auth.guard.service';\r\nimport { DonationService } from './service/donation.service';\r\nimport { ProjectService } from './service/project.service';\r\nimport { DetailsComponent } from './page/details/details.component';\r\nimport { AddProjectComponent } from './page/add-project/add-project.component';\r\nimport { CategoryService } from './service/category.service';\r\nimport { ContactComponent } from './page/contact/contact.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthenticationService } from './security/authentication-service.service';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'main', component: MainComponent},\r\n  { path: '', redirectTo: 'main', pathMatch: 'full' },\r\n  { path: 'projects/:id', component: DetailsComponent},\r\n  { path: 'add-project', component: AddProjectComponent},\r\n  { path: 'contact', component: ContactComponent}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    DetailsComponent,\r\n    AddProjectComponent,\r\n    ContactComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n     HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      {\r\n        enableTracing: false\r\n      }\r\n    )\r\n  ],\r\n  providers: [\r\n     {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n    AuthenticationService,\r\n    CanActivateAuthGuard,\r\n    JwtUtilsService,\r\n    ProjectService,\r\n    DonationService,\r\n    CategoryService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\"></div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <form class=\\\"form-signin\\\" (ngSubmit)=\\\"login()\\\">\\r\\n        <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\r\\n        <label for=\\\"username\\\" class=\\\"sr-only\\\">Username</label>\\r\\n        <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\"\\r\\n          required autofocus>\\r\\n        <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n        <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\"\\r\\n          required>\\r\\n        <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n      </form>\\r\\n      <div *ngIf=wrongUsernameOrPass class=\\\"alert alert-warning box-msg\\\" role=\\\"alert\\\">\\r\\n        Wrong username or password.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n\r\nimport { Observable } from 'rxjs'\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../security/authentication-service.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  constructor(private authenticationService:AuthenticationService,\r\n              private router: Router) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login():void{\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/main']);          \r\n        }\r\n      }\r\n    ,\r\n    (err:Error) => {\r\n      if(err.toString()==='Ilegal login'){\r\n        this.wrongUsernameOrPass = true;\r\n        console.log(err);\r\n      }\r\n      else{\r\n        Observable.throw(err);\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <form (ngSubmit)=\\\"saveProject()\\\" class=\\\"form\\\">\\r\\n        <strong>Naziv projekta:</strong>\\r\\n        <input [(ngModel)]=\\\"projectsToAdd.name\\\" class=\\\"form-control\\\"name=\\\"add\\\" type=\\\"text\\\" required=\\\"true\\\"/>\\r\\n        \\r\\n        <strong>Kategorija:</strong>\\r\\n        <select [compareWith]=\\\"byId\\\" [(ngModel)]=\\\"projectsToAdd.category\\\" name=\\\"category\\\" class=\\\"form-control\\\">\\r\\n            <option *ngFor=\\\"let category of categories\\\" [ngValue]=\\\"category\\\">{{category.name}}</option>\\r\\n        </select>  \\r\\n\\r\\n        <strong>Opis projekta: </strong>\\r\\n        <input [(ngModel)]=\\\"projectsToAdd.description\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"projectDesc\\\"/>\\r\\n\\r\\n        <strong>Početak projekta: </strong>\\r\\n        <input [(ngModel)]=\\\"projectsToAdd.start\\\" type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"projectStart\\\"/>\\r\\n        \\r\\n        <strong>Završetak projekta: </strong>\\r\\n        <input [(ngModel)]=\\\"projectsToAdd.deadline\\\"  type=\\\"date\\\" class=\\\"form-control\\\"  name=\\\"projectEnd\\\" />\\r\\n        \\r\\n        <strong>Potreban iznos: </strong>\\r\\n        <input [(ngModel)]=\\\"projectsToAdd.donationGoal\\\"  type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"projectGoal\\\" />\\r\\n        <strong>Dodavanje slike: </strong>\\r\\n        <input [(ngModel)]=\\\"projectsToAdd.imageURL\\\"  type=\\\"url\\\" class=\\\"form-control\\\" name=\\\"imgURl\\\"/>\\r\\n        \\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#dodavanjeZavrseno\\\">\\r\\n            Sačuvaj\\r\\n        </button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#dodavanjePrekinuto\\\">\\r\\n          Odustani\\r\\n      </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <img  width=\\\"100%\\\" height=\\\"400px\\\" class=\\\"img-fluid\\\" src=\\\"https://biznakenya.com/wp-content/uploads/2018/01/Crowdfunding-concept-2.jpg\\\">\\r\\n        <div class=\\\"align-top\\\"> \\r\\n          <div class=\\\"carousel-caption\\\">\\r\\n              <div class=\\\"align-top\\\">\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"dodavanjeZavrseno\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dodavanjeZavrsenoLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"dodavanjeZavrsenoLabel\\\">Dodavanje novog projekta</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Uspešno završeno\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Zatvori</button>\\r\\n        <a href=\\\"main\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Povratak na projekte</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"dodavanjePrekinuto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dodavanjePrekinutoLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"dodavanjeZavrsenoLabel\\\">Dodavanje novog projekta</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Da li zaista želite da odustanete od dodavanja novog projekta?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <a href=\\\"main\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">DA</a>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">NE</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from '../../service/project.service';\r\nimport { CategoryService } from '../../service/category.service';\r\n\r\n@Component({\r\n  selector: 'app-add-project',\r\n  templateUrl: './add-project.component.html',\r\n  styleUrls: ['./add-project.component.css']\r\n})\r\nexport class AddProjectComponent implements OnInit {\r\n\r\n  date = new Date(Date.now());\r\n  categories: any;\r\n  projectsToAdd: any={\r\n    name: '',\r\n    description: '',\r\n    start: this.date,\r\n    deadline: this.date,\r\n    donationGoal: 0,\r\n    donationCurrent: 0,\r\n    isSuccessful: false,\r\n      category: {\r\n        id: \"\",\r\n      },\r\n    donations: [{\r\n      amount: 0,\r\n    }],\r\n      imageURL: '',\r\n  };\r\n\r\n  constructor(private projectService: ProjectService,\r\n            private categoryService: CategoryService) { }\r\n\r\n  ngOnInit( ) {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.categoryService.get().subscribe((resp)=>{\r\n      this.categories = resp['content'];\r\n    });\r\n  }\r\n\r\n  byId(category1, category2){\r\n    return category1.id === category2.id;\r\n  }\r\n\r\n  saveProject(){\r\n    this.projectService.addProject(this.projectsToAdd).subscribe((resp)=>{\r\n    })\r\n  }\r\n\r\n  reset() {\r\n    this.projectsToAdd = {\r\n      name: '',\r\n      description: '',\r\n      start: this.date,\r\n      deadline: this.date,\r\n      donationGoal: 0,\r\n      donationCurrent: 0,\r\n      isSuccessful: false,\r\n        category: {\r\n          id: \"\",\r\n        },\r\n      donations: [{\r\n        amount: 0,\r\n      }],\r\n        imageURL: '',\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <img  width=\\\"100%\\\" height=\\\"300px\\\" class=\\\"img-fluid\\\" src=\\\"https://www.panorama.com/wp-content/uploads/2015/03/contact_us_banner1.jpg\\\">\\r\\n</div>\\r\\n<hr>\\r\\n<hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n        <div class=\\\"text-light\\\">Ime</div><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Unesite ime\\\">\\r\\n        <div class=\\\"text-light\\\">Email adresa</div><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Unesite e-mail adresu\\\">\\r\\n        <div class=\\\"text-light\\\">Poruka</div><textarea class=\\\"form-control\\\" rows=\\\"5\\\" id=\\\"comment\\\" placeholder=\\\"Unesite poruku\\\"></textarea>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Pošalji</button>\\r\\n    </div> \\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-7\\\">\\r\\n            <h3 style=\\\"text-align: center; color: #3b5e7d;\\\"> Pratite nas na društvenim mrežama </h3>\\r\\n            <img width=\\\"100%\\\" class=\\\"img-fluid\\\" src=\\\"https://melissadivietri.com/wp-content/uploads/2016/03/Social-networks_a.png\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div> \\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n      <h4>Kontakt: 021/555-1235</h4>\\r\\n      <h4>Email adresa: refreshnovisad@gmail.com </h4>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n        <img  width=\\\"100%\\\" class=\\\"img-fluid\\\" src=\\\"{{project.imageURL}}\\\" />\\r\\n        <div class=\\\"align-top\\\"> \\r\\n            <div class=\\\"carousel-caption\\\">\\r\\n                <div class=\\\"align-top\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\"><h1 class=\\\"bg-info\\\">{{project.name}}</h1></div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n                <h3>Opis projekta:</h3><p>{{project.description}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n                <p><strong>Početak projekta:</strong> {{project.start}}</p>\\r\\n                <p><strong>Završetak projekta:</strong> {{project.deadline}}</p>\\r\\n                <p><strong>Potreban iznos:</strong> {{project.donationGoal}} rsd</p>\\r\\n                <p><strong>Ukupno donirano:</strong>{{project.donationCurrent}} rsd </p>\\r\\n                <p><button (click)=\\\"showDonate()\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#doniranje\\\">Doniraj</button></p>\\r\\n                <p><a class=\\\"btn\\\" href=\\\"main\\\">Nazad</a></p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Donate modal-->\\r\\n<div class=\\\"modal fade\\\" id=\\\"doniranje\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"doniranje\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n          <h4 class=\\\"modal-title\\\" id=\\\"doniranjeZavrsenoLabel\\\"><strong>Doniranje</strong></h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <form (submit)=\\\"donate()\\\" class=\\\"form\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <strong>Koliko Novca:</strong><input [(ngModel)]=\\\"donation.amount\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"amount\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Potvrdi\\\"/>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Odustani</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ProjectService } from '../../service/project.service';\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { Donation } from '../../model/donation.model';\r\nimport { DonationService } from '../../service/donation.service';\r\nimport { Project } from '../../model/project.model';\r\nimport { AuthenticationService } from '../../security/authentication-service.service';\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n  \r\n  donation: Donation ={\r\n    amount: 0\r\n  }\r\n  project:any; //ovo ispraviti\r\n  \r\n  constructor(private projectService:ProjectService,\r\n              private route:ActivatedRoute,\r\n              private donationService: DonationService,\r\n              private authenticationService: AuthenticationService,\r\n              private router: Router) { }\r\n              \r\n\r\n  ngOnInit() {\r\n     this.loadData();\r\n    }\r\n  showDonate() {\r\n    if (!this.isLoggedIn()) {\r\n      alert(\"Da biste donirali novac morate se ulogovati!\");\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      return document.getElementById(\"doniranje\");\r\n    }\r\n\r\n  }\r\n  isLoggedIn() {\r\n    return this.authenticationService.isLoggedIn();\r\n  }  \r\n  /*showDonate(){\r\n    var x = document.getElementById(\"donateForm\");\r\n     if (x.style.display === \"none\") {\r\n        x.style.display = \"block\";\r\n    } else {\r\n        x.style.display = \"none\";\r\n    }\r\n  }*/\r\n  donate() {\r\n    \r\n    this.donationService.createDonation(this.donation).subscribe((resp) => {\r\n      this.projectService.increaseDonationCurrent(this.project.id, this.donation.amount).subscribe(\r\n        (resp) => {\r\n          this.loadData();\r\n          this.reset();\r\n        }\r\n      )\r\n\r\n    });\r\n  }\r\n  \r\n\r\n  loadData() {\r\n     this.route.params.subscribe((params)=>{\r\n        var id = +params['id'];\r\n        this.projectService.getOneProject(id).subscribe((resp)=>{\r\n          this.project = resp;\r\n        })\r\n      })\r\n  }\r\n   reset() {\r\n     this.donation= {\r\n        amount: 0\r\n     }\r\n   } \r\n  }\r\n  \r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <img  width=\\\"100%\\\" height=\\\"400px\\\" class=\\\"img-fluid\\\" src=\\\"http://project-rec.eu/wp-content/uploads/2014/01/novi-sad-nocu.jpg\\\">\\r\\n      <div class=\\\"align-top\\\"> \\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n            <div class=\\\"align-top\\\">\\r\\n              <h1  class=\\\"align-text-top\\\">ReFresh Novi Sad</h1>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <form (ngSubmit)=\\\"search()\\\" class=\\\"form form-inline\\\">\\r\\n        <label for= \\\"searchProjects\\\">Pretraga po:</label>\\r\\n        <select name=\\\"searchProjects\\\" [(ngModel)]=\\\"critteria\\\" class=\\\"form-control\\\">\\r\\n          <option selected value=\\\"name\\\">nazivu</option>\\r\\n          <option value=\\\"category\\\">kategoriji</option>\\r\\n        </select>\\r\\n           <input  name=\\\"search\\\" type=\\\"text\\\" [(ngModel)]=\\\"inputSearch\\\" class=\\\"form-control\\\" />\\r\\n           <input type=\\\"submit\\\" value=\\\"Traži\\\" class=\\\"btn btn-primary\\\" />\\r\\n           <input (click)=\\\"resetSearch()\\\" class=\\\"btn btn-danger\\\" value=\\\"Poništi\\\" type=\\\"reset\\\"/>\\r\\n      </form>\\r\\n      <hr>\\r\\n      <label *ngIf=\\\"isLoggedIn()\\\" for=\\\"addProjects\\\">Dodavanje novih projekata <a class=\\\"btn btn-primary\\\" href=\\\"add-project\\\">Dodaj</a></label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"pages\\\"> \\r\\n      <button *ngIf=\\\"currentPage>0\\\" (click)=\\\"changePage(-1)\\\" class=\\\"btn\\\"><<<</button>\\r\\n    {{currentPage}}\\r\\n       <button *ngIf=\\\"currentPage <totalPages-1\\\" (click)=\\\"changePage(1)\\\" class=\\\"btn\\\">>>></button>\\r\\n  </div>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 single-project\\\"  *ngFor=\\\"let project of projects\\\">\\r\\n        <div class=\\\"thumbnail\\\">\\r\\n            <img src=\\\"{{project.imageURL}}\\\"  class=\\\"img-thumbnail img-rounded\\\" alt=\\\"{{project.name}}\\\" />\\r\\n        </div> \\r\\n        \\r\\n        <h3>{{project.name}}</h3>\\r\\n        <h5>{{project.category.name}}</h5>\\r\\n        <hr>\\r\\n        <a class=\\\"btn btn-primary\\\" href=\\\"projects/{{project.id}}\\\">Detalji</a>\\r\\n        <a *ngIf=\\\"isAdmin()\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteProject(project.id)\\\">Obriši</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<hr>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Project } from '../../model/project.model';\r\nimport { Category } from '../../model/category.model';\r\nimport { ProjectService } from '../../service/project.service';\r\nimport { CategoryService } from '../../service/category.service';\r\nimport { AuthenticationService } from '../../security/authentication-service.service';\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n \r\n  [x: string]: any;\r\n  projects: Project[];\r\n  currentPage: number=0;\r\n  totalPages: number;\r\n  critteria: string;\r\n  inputSearch: string;\r\n  categories: Category[];\r\n  \r\n  constructor(private projectService: ProjectService,\r\n              private categoryService: CategoryService,\r\n              private authenticationService: AuthenticationService, ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    \r\n  }\r\n  isAdmin() {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (currentUser === null) {\r\n      return false;\r\n    }\r\n    if (currentUser.roles == 'ADMINISTRATOR') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isLoggedIn() {\r\n     return this.authenticationService.isLoggedIn();\r\n  }\r\n  loadData() {\r\n    this.projectService.getProjects(this.currentPage).subscribe(\r\n      (resp) => {\r\n        this.projects = resp['content'];\r\n        this.totalPages = resp['totalPages'];\r\n      });\r\n    this.categoryService.get().subscribe(\r\n      (resp) => {\r\n        this.categories = resp['content'];\r\n      }\r\n    )\r\n  }\r\n   changePage(i:number){\r\n    this.currentPage+=i;\r\n    this.loadData();\r\n  }\r\n  search(){\r\n    if (this.critteria === 'name') {\r\n      var name = this.inputSearch;\r\n    } else {\r\n      var category = this.inputSearch;\r\n    }\r\n    this.projectService.getProjects(0, name, category).subscribe((resp)=>{\r\n      this.projects = resp['content'];\r\n      this.totalPages = resp['totalPages'];\r\n    })\r\n  }\r\n  deleteProject(id: number) {\r\n    this.projectService.deleteProject(id).subscribe((resp) =>{\r\n      alert(\"projekat je obrisan\");\r\n    })\r\n    this.loadData();\r\n  }\r\n  resetSearch(){\r\n    this.loadData();\r\n   // this.name = '';\r\n   // this.projectService.getProjects(0, this.name).subscribe((resp)=>{\r\n   //   this.projects = resp ['content'];\r\n   // })\r\n  }\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators'\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { JwtUtilsService } from './jwt-utils.service';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private readonly loginPath = '/api/login';\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\r\n      .pipe(map((res: any) => {\r\n        let token = res && res['token'];\r\n        if (token) {\r\n          localStorage.setItem('currentUser', JSON.stringify({\r\n            username: username,\r\n            roles: this.jwtUtilsService.getRoles(token),\r\n            token: token\r\n          }));\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }), catchError((err:any) => {\r\n                let msg = '';\r\n                if (err.status === 400) {\r\n          return Observable.throw('Ilegal login');\r\n        }else {\r\n          return Observable.throw(err.json().error || 'Server error');\r\n        }\r\n         }))\r\n      /*.catch((error: any) => {\r\n        if (error.status === 400) {\r\n          return Observable.throw('Ilegal login');\r\n        }\r\n        else {\r\n          return Observable.throw(error.json().error || 'Server error');\r\n        }\r\n      });*/\r\n  }\r\n  \r\n\r\n  \r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    if (this.getToken() != '') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from './authentication-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class CanActivateAuthGuard implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authenticationService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class JwtUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token: string) {\r\n    let jwtData = token.split('.')[1];\r\n    let decodedJwtJsonData = window.atob(jwtData);\r\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n\r\n    return decodedJwtData.roles.map(x => x.authority) || [];\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthenticationService } from './authentication-service.service';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http/src/headers';\r\nimport { Injector } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private inj: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authenticationService:AuthenticationService = this.inj.get(AuthenticationService); \r\n    request = request.clone({\r\n      setHeaders: {\r\n        'X-Auth-Token': `${authenticationService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n\r\n  readonly path=\"/api/categories\";\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  get(){\r\n    return this.httpClient.get(this.path);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Donation } from '../model/donation.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DonationService {\r\n  readonly path: string='api/donations';\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n  \r\n  createDonation(donation: Donation) {\r\n   let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n   return this.httpClient.post(this.path, donation, {headers});\r\n    \r\n\r\n  }\r\n}\r\n\r\n\r\n  \r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Project } from '../model/project.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  readonly path: string='api/projects';\r\n  params :HttpParams;\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getProjects(currentPage: number, name?: string, category?: string) {\r\n    let cPage = String(currentPage);\r\n    let params: HttpParams = new HttpParams();\r\n    if (name) {\r\n      params= params.append('name',name).set('page', cPage);\r\n    }\r\n    if (category) {\r\n      params= params.append('category', category).set('page', cPage);\r\n    }  \r\n\r\n    return this.httpClient.get<Project[]>(this.path, {params});\r\n  }\r\n  \r\n  getOneProject(id:number){\r\n    return this.httpClient.get(this.path+\"/\"+id);\r\n  }\r\n\r\n  deleteProject(id: number) {\r\n    return this.httpClient.delete(this.path+\"/\"+id);\r\n  }\r\n  addProject(project){\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n    return this.httpClient.post(this.path, project, {headers});\r\n  }\r\n\r\n  increaseDonationCurrent(id: number, amount: number) {\r\n    let params: HttpParams = new HttpParams();\r\n    let tmp = String(amount);\r\n    params = params.append('ammount', tmp);\r\n    /* console.log(params); */\r\n    return this.httpClient.put(this.path + \"/addDonation/\" + id, params );\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}